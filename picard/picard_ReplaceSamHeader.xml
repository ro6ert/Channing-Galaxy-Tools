<tool name="Replace Sam Header:" id="picard_ReplaceSamHeader" version="0.0.1">
  <requirements><requirement type="package">picard</requirement></requirements>
  <description>(Picard)</description>
  <command interpreter="python">
    picard_wrapper.py
      --input "$inputFile"
      #if str( $outputFormat ) == "sam"
        -o "$outFileSam"
      #else if str( $outputFormat ) == "bam"
        -o "$outFileBam"
      #end if
      --header-file $headerFile
      --output-format $outputFormat
      -j "${GALAXY_DATA_INDEX_DIR}/shared/jars/ReplaceSamHeader.jar"
      --tmpdir "${__new_file_path__}" 
  </command>
  <inputs>
    <param format="bam,sam" name="inputFile" type="data" label="Input: sam or bam format short read data in your current history whose header will be replaced"
      help="If the select list is empty, you need to upload or import some aligned short read data from a shared library" />
    <param format="bam,sam" name="headerFile" type="data" label="sam or bam file from which header will be read"
      help="If the select list is empty, you need to upload or import some aligned short read data from a shared library" />
    <param name="outputFormat" type="select" label="Output format - use bam to save space please"> 
           <option value="bam" selected="true">Binary (compressed) bam</option>
           <option value="sam">Uncompressed, space hungry sam</option>
    </param>
  </inputs>
  <outputs>
    <data name="outFileSam" format="sam" label="${tool.name} on ${on_string}: sam with replaced header">
      <filter>outputFormat == 'sam'</filter>
    </data>
    <data name="outFileBam" format="bam" label="${tool.name} on ${on_string}: bam with replaced header">
      <filter>outputFormat == 'bam'</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.bam HEADER=test-data/picard_RSH_input1.bam O=picard_RSH_output1.sam
      picard_RSH_input1.bam can be made from picard_RSH_input1.sam
      -->
      <param name="inputFile" value="picard_input_tiny_coord.bam" ftype="bam" />
      <param name="headerFile" value="picard_RSH_input1.bam" ftype="bam" />
      <param name="outputFormat" value="sam" />
      <output name="outFileSam" file="picard_RSH_output1.sam" ftype="sam" />
    </test>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.sam HEADER=test-data/picard_RSH_input1.bam O=picard_RSH_output2.sam
      picard_RSH_input1.bam can be made from picard_RSH_input1.sam
      -->
      <param name="inputFile" value="picard_input_tiny_coord.sam" ftype="sam" />
      <param name="headerFile" value="picard_RSH_input1.bam" ftype="bam" />
      <param name="outputFormat" value="sam" />
      <output name="outFileSam" file="picard_RSH_output2.sam" ftype="sam" />
    </test>
    <!-- Functional tests with Picard bam outputs currently aren't working
    <test>
    -->
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.sam HEADER=test-data/picard_RSH_input1.sam O=picard_RSH_output2.bam
      -->
    <!--
      <param name="inputFile" value="picard_input_tiny_coord.sam" ftype="sam" />
      <param name="headerFile" value="picard_RSH_input1.sam" ftype="sam" />
      <param name="outputFormat" value="bam" />
      <output name="outFileBam" file="picard_RSH_output2.bam" ftype="bam" />
    </test>
    -->
  </tests>
  <help>


.. class:: infomark

**Purpose**

Replace Sam Header with the header from another sam file. The tool does not do any significant validation, so it's up to the user to make sure that the elements in the header are relevant and that the new header has all the required things.

Replace the SAMFileHeader in a SAM file with the given header. Validation is minimal. It is up to the user to ensure that all the elements referred to in the SAMRecords are present in the new header. Sort order of the two input files must be the same.

**Picard documentation**

This is a Galaxy interface to the Picard-tools_'s ReplaceSamHeader tools, which is supported by SAMTools_.

 .. _Picard-tools: http://picard.sourceforge.net/index.shtml
 .. _SAMTools: http://samtools.sourceforge.net/

------

**Inputs**

Either a sam file or a bam file is required as the file whose header will be replaced. The header file is also required and can also be either sam or bam (it does not have to be the same type as the other file). In both cases, if a bam file is used, it must be coordinate-sorted. Galaxy currently coordinate-sorts all bam files.

**Outputs**

The tool will output either bam (the default) or sam. Bam is recommended since it is smaller.



  </help>
</tool>












