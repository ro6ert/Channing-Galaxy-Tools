<tool name="Sam/bam Alignment Summary Metrics:" id="PicardASMetrics" version="0.03">
  <description>(Picard)</description>
  <command interpreter="python">
    picard_wrapper.py -i "$input_file" -d "$html_file.files_path" -t "$html_file"
    --assumesorted "$sorted" -b "$bisulphite" --adaptors "$adaptors" --maxinsert "$maxinsert" -n "$out_prefix"
    -j ${GALAXY_DATA_INDEX_DIR}/shared/jars/CollectAlignmentSummaryMetrics.jar
#if $genomeSource.refGenomeSource == "history":
    --ref-file "$genomeSource.ownFile"
#else
    --ref "${ filter( lambda x: str( x[0] ) == str( $genomeSource.index ), $__app__.tool_data_tables[ 'all_fasta' ].get_fields() )[0][-1] }"
#end if
  </command>
  <requirements><requirement type="package">picard</requirement></requirements>
  <inputs>
    <param format="sam,bam" name="input_file" type="data" label="Input: sam or bam format short read data in your current history"
      help="If the select list is empty, you need to upload or import some aligned short read data from a shared library"/>
    <param name="out_prefix" value="Picard Alignment Summary Metrics" type="text"
      label="Title for the output file - use this remind you what the job was for" size="80" />

      <conditional name="genomeSource">
    
      <param name="refGenomeSource" type="select" help="This tool needs a reference genome. Default is usually right"
         label="Align to which reference genome? - default, built-in or choose from current history">
        <option value="default" selected="true">Default - use the input data genome/build</option>
        <option value="indexed">Select a different built-in genome</option>
        <option value="history">Use a genome (fasta format) from my history</option>
      </param>
      <when value="default">
        <param name="index" type="select" label="Select a default reference genome">
          <options from_data_table="all_fasta">
          <filter type="data_meta" ref="input_file" key="dbkey" column="dbkey" multiple="True" separator="," />
          <validator type="no_options" message="No reference build available for selected input" /> 
          </options>
        </param>
      </when>
      <when value="indexed">
        <param name="index" type="select" label="Select a built-in reference genome" >
          <options from_data_table="all_fasta">
          </options>
        </param>
      </when>
      <when value="history">
        <param name="ownFile" type="data" format="fasta" metadata_name="dbkey" label="Select a reference genome from history" />
      </when>
    </conditional>
    <param name="sorted" type="boolean" label="Assume the input file is already sorted" checked="true" truevalue="true" falsevalue="false"/>
    <param name="bisulphite" type="boolean" label="Input file contains Bisulphite sequenced reads" checked="false" falsevalue="false" truevalue="true" />
    <param name="adaptors" value="" type="text" area="true" label="Adapter sequences - one per line if multiple" size="5x120" />
    <param name="maxinsert" value="100000" type="integer" label="Larger paired end reads and inter-chromosomal pairs considered chimeric " size="20" />
  </inputs>
  <outputs>
    <data format="html" name="html_file"  label="${out_prefix}.html" />
  </outputs>
  <tests>
    <test>
      <param name="out_prefix" value="AsMetrics" />
      <param name="bisulphite" value="false" />
      <param name="sorted" value="true" />
      <param name="adaptors" value="" />
      <param name="maxinsert" value="100000" />
      <param name="refGenomeSource" value="history" />
      <param name="ownFile" value="picard_input_hg18.trimmed.fasta" />
      <param name="input_file" value="picard_input_tiny.sam" dbkey="hg18" />
      <output name="html_file" file="picard_output_alignment_summary_metrics.html" ftype="html" lines_diff="55"/>
    </test>
    <test>
      <param name="out_prefix" value="AsMetricsIndexed" />
      <param name="bisulphite" value="false" />
      <param name="sorted" value="true" />
      <param name="adaptors" value="" />
      <param name="maxinsert" value="100000" />
      <param name="refGenomeSource" value="indexed" />
      <param name="index" value="hg19" />
      <param name="input_file" value="picard_input_sorted_pair.sam" dbkey="hg19" />
      <output name="html_file" file="picard_output_AsMetrics_indexed_hg18_sorted_pair.html" ftype="html" lines_diff="50"/>
    </test>
  </tests>
  <help>


.. class:: infomark

**Syntax**

- **Input** is sam/bam format aligned short read data in your current history
- **Title** is the title to use for all output files from this job - use it for high level metadata
- **Refseq** is the sequence you want to interogate - eg hg19
- **Assume Sorted** saves sorting time - but only if true!
- **Bisulphite data** see Picard documentation http://picard.sourceforge.net/command-line-overview.shtml#CollectAlignmentSummaryMetrics
- **Maximum acceptable insertion length** See Picard documentation at http://picard.sourceforge.net/command-line-overview.shtml#CollectAlignmentSummaryMetrics


-----

.. class:: infomark

**Summary**

This Galaxy tool uses Picard to report measures of alignment
Picard is supported through the SamTools project.
This tool wraps Picard and is supported through the galaxy-bugs mailing list
or by providing comments through the report form that appears automatically
if a tool fails unexpectedly when you run it in Galaxy.

All the Picard tools are freely available and are documented
at http://picard.sourceforge.net/command-line-overview.shtml#CollectAlignmentSummaryMetrics
Some of that material is consolidated below from the Picard documentation

-----

.. class:: infomark

**Picard Documentation**

The Picard documentation (reformatted for Galaxy) says:

***Collect Alignment Summary Metrics***

   Reads a SAM or BAM file and writes a file containing summary alignment metrics.

.. csv-table:: ASMDoc

   :header-rows: 1

    Option,Description
    "INPUT=File","SAM or BAM file Required."
    "OUTPUT=File","File to write insert size metrics to Required."
    "REFERENCE_SEQUENCE=File","Reference sequence file Required."
    "ASSUME_SORTED=Boolean","If true (default), unsorted SAM/BAM files will be considerd coordinate sorted "
    "MAX_INSERT_SIZE=Integer","Paired end reads above this insert size will be considered chimeric along with inter-chromosomal pairs. Default value: 100000."
    "ADAPTER_SEQUENCE=String","This option may be specified 0 or more times. "
    "IS_BISULFITE_SEQUENCED=Boolean","Whether the SAM or BAM file consists of bisulfite sequenced reads. Default value: false. "
    "CREATE_MD5_FILE=Boolean","Whether to create an MD5 digest for any BAM files created."


AlignmentSummaryMetrics

High level metrics about the alignment of reads within a SAM file, produced by the CollectAlignmentSummaryMetrics program and usually stored in a file 
with the extension ".alignment_summary_metrics".

Output Column Definitions

#. CATEGORY: One of either UNPAIRED (for a fragment run), FIRST_OF_PAIR when metrics are for only the first read in a paired run, SECOND_OF_PAIR when the metrics are for only the second read in a paired run or PAIR when the metrics are aggregeted for both first and second reads in a pair.
#. TOTAL_READS: The total number of reads including all PF and non-PF reads. When CATEGORY equals PAIR this value will be 2x the number of clusters.
#. PF_READS: The number of PF reads where PF is defined as passing Illumina's filter.
#. PCT_PF_READS: The percentage of reads that are PF (PF_READS / TOTAL_READS)
#. PF_NOISE_READS: The number of PF reads that are marked as noise reads. A noise read is one which is composed entirey of A bases and/or N bases. These reads are marked as they are usually artifactual and are of no use in downstream analysis.
#. PF_READS_ALIGNED: The number of PF reads that were aligned to the reference sequence. This includes reads that aligned with low quality (i.e. their alignments are ambiguous).
#. PCT_PF_READS_ALIGNED: The percentage of PF reads that aligned to the reference sequence. PF_READS_ALIGNED / PF_READS
#. PF_HQ_ALIGNED_READS: The number of PF reads that were aligned to the reference sequence with a mapping quality of Q20 or higher signifying that the aligner estimates a 1/100 (or smaller) chance that the alignment is wrong.
#. PF_HQ_ALIGNED_BASES: The number of bases aligned to the reference sequence in reads that were mapped at high quality. Will usually approximate PF_HQ_ALIGNED_READS * READ_LENGTH but may differ when either mixed read lengths are present or many reads are aligned with gaps.
#. PF_HQ_ALIGNED_Q20_BASES: The subest of PF_HQ_ALIGNED_BASES where the base call quality was Q20 or higher.
#. PF_HQ_MEDIAN_MISMATCHES: The median number of mismatches versus the reference sequence in reads that were aligned to the reference at high quality (i.e. PF_HQ_ALIGNED READS).
#. PF_HQ_ERROR_RATE: The percentage of bases that mismatch the reference in PF HQ aligned reads.
#. MEAN_READ_LENGTH: The mean read length of the set of reads examined. When looking at the data for a single lane with equal length reads this number is just the read length. When looking at data for merged lanes with differing read lengths this is the mean read length of all reads.
#. READS_ALIGNED_IN_PAIRS: The number of aligned reads who's mate pair was also aligned to the reference.
#. PCT_READS_ALIGNED_IN_PAIRS: The percentage of reads who's mate pair was also aligned to the reference. READS_ALIGNED_IN_PAIRS / PF_READS_ALIGNED
#. BAD_CYCLES: The number of instrument cycles in which 80% or more of base calls were no-calls.
#. STRAND_BALANCE: The number of PF reads aligned to the positive strand of the genome divided by the number of PF reads aligned to the genome.
#. PCT_CHIMERAS: The percentage of reads that map outside of a maximum insert size (usually 100kb) or that have the two ends mapping to different chromosomes.
#. PCT_ADAPTER: The percentage of PF reads that are unaligned and match to a known adapter sequence right from the start of the read.

-----

.. class:: infomark

**Typical tool invocation without Galaxy is on a command line - eg:**

java -jar /share/shared/galaxy/tool-data/shared/jars/CollectAlignmentSummaryMetrics.jar REFERENCE_SEQUENCE="hg18.fasta" ASSUME_SORTED=true ADAPTER_SEQUENCE='' IS_BISULFITE_SEQUENCED=false INPUT=test.bam OUTPUT=picardASMetrics.txt VALIDATION_STRINGENCY=LENIENT

Note that last parameter - your life will be far easier if you use it.

Unfortunately some packages seem perfectly capable of producing sam and bam files that Picard will be picky about otherwise.
There is a clean sam tool - but only filters what it ignores. The lenient flag allows reads to be discarded if they're empty or don't map.
This seems an awful strategy but unfortunately may be needed to run an analysis using badly behaved external packages.

-----

.. class:: infomark

**Attribution**

Picard and Samtools go together. They are external to and completely independent of Galaxy. We acknowledge that all credit for
their methods and contribution are due to them.

Here, you can apply Picard tools through Galaxy which you may find much easier than through the native Picard command line interface.



-----

.. class:: infomark

**Copyright**

This Galaxy tool is a component of the rgenetics toolkit.

Written by and copyright Ross Lazarus, ross.lazarus at gmail etc, September 2010

All rgenetics artefacts are available licensed under the LGPL_
Other dependencies are licensed at the author's discretion - please see each individual package for details
 
 .. _LGPL: http://www.gnu.org/copyleft/lesser.html

  </help>
</tool>

