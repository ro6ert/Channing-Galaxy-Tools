<tool name="F-Seq:" id="rgFseq" version="0.01">
  <description>Models for faire, chip-seq </description>
  <command interpreter="python">
 rgFseq.py -i "$input_file" -of "$out_format" -b "$background" 
#if $fragment > '':
-f "$fragment"
#end if
#if $featlen > '':
-l "$featlen"
#end if
#if $threshold > '':
-t "$threshold"
#end if
#if $step > '':
-s "$step"
#end if
#if $background > '':
-b "$background"
#end if

  </command>
  <inputs>

    <param format="bed" name="input_file" type="data" label="Input: bed format aligned short read data in your current history"
      help="Aligned short reads data as bam can be converted to bed using the bam(sam) to bed tool "/>
      <param name="background" type="select" help="Optional - see F-Seq documentation (links below)"
         label="Built in Background directory">
        <option value="None" selected="true">No background ("sequence-ability") correction</option>
        <option value="coordinate">Coordinate order</option>
        <option value="unsorted">Unsorted - docs not clear if this means unchanged or not</option>
      </param>
    <param name="out_prefix" value="FSeq" type="text"
      label="Title for the output file - use this remind you what the job was for" size="80" />
    <param name="fragment" value="" type="text" 
      label="Optional fragment size. Leave blank to estimate from data" size="10" />
    <param name="featlen" value="600" type="text" help= "See F-Seq documentation (links below)"
      label="Optional feature length. Leave blank to estimate from data" size="10" />
    
    
    <param name="out_format" type="select" label="Output file format" size="3"
    help= "See F-Seq documentation (links below)" >
      <option value="wig" selected="true">Wiggle format</option>
      <option value="bed">Bed format</option>
      <option value="npf">Narrow peak (bed6 + 3) format</option>
    </param>
    <param name="threshold" value="4.0" type="text" help= "See F-Seq documentation (links below)"
      label="Threshold (standard deviations) (default=4.0)" size="10" />
   <param name="step" value="1" type="text" help= "See F-Seq documentation (links below)"
      label="wiggle track step (default=1)" size="10" />
    <param name="maxheap" type="select" help="If in doubt, choose 4G and read FSeq documentation please. Chr1 needs lots'o'ram (TM)"
     label="Java heap size. Java is a pig, the art is long but memory is short">
    <option value="4G" selected="true">4GB will work for most reasonable sized datasets </option>
    <option value="8G" >8GB - try this if 4GB fails</option>
    <option value="16G">16GB - try this if 8GB fails</option>
    <option value="32G">32GB - please use only if absolutely necessary</option>
    </param>


  </inputs>
  <outputs>
    <data format="bed" name="out_format" label="F-Seq_${out_prefix}.${out_format}">
    <change_format>
     <when input="out_format" value="wig" format="wig" />
     <when input="out_format" value="npf" format="npf" />
     <when input="out_format" value="wig" format="wig" />
    </change_format> 
    </data>
  </outputs>
  <tests>
    <test>
      <param name="input_file" value="bioconductor_shortread_in.fastq" />
      <param name="out_prefix" value="bioconductor_shortread_out" />
      <output name="html_file" file="bioconductor_shortread_out.html" ftype="html" lines_diff="100"/>
    </test>
  </tests>
  <help>


.. class:: infomark

**Purpose**

Analyse Chip-seq and Dnase-Seq data

**Why you might want to use this tool**

This tool provides a Galaxy interface to FSeq.

-
-----

.. class:: infomark

**For comprehensive FSeq documentation**

http://www.genome.duke.edu/labs/furey/software/fseq/

First part follows for the lazy

Research Software

 F-Seq: A Feature Density Estimator for High-Throughput Sequence Tags
T
 ag sequencing using high-throughput sequencing technologies are now regularly employed to identify specific sequence features such as transcription factor binding sites (ChIP-seq) or regions of open chromatin (DNase-seq). To intuitively summarize and display individual sequence data as an accurate and interpretable signal, we developed F-Seq, a software package that generates a continuous tag sequence density estimation allowing identification of biologically meaningful sites whose output can be displayed directly in the UCSC Genome Browser.

 F-Seq Version 1.81

 usage: fseq [options]... [file(s)]...

 -b <background dir>     background directory (default=none)
 -d <input dir>          input directory (default=current directory)
 -f <arg>                fragment size (default=estimated from data)
 -h                      print usage
 -l <arg>                feature length (default=600)
 -o <output dir>         output directory (default=current directory)
 -of <wig | bed | npf>   output format (default wig)
 -p <ploidy dir>         ploidy/input directory (default=none)
 -s <arg>                wiggle track step (default=1)
 -t <arg>                threshold (standard deviations) (default=4.0)
 -v                      verbose output

Note: DNase HS data (5' ends) - set -f 0

-----

.. class:: infomark

**Attributions**

See http://www.genome.duke.edu/labs/furey/software/fseq/


Here, presented through Galaxy which might be easier than through the native command line interface.

-----

.. class:: infomark

**Copyright**

This Galaxy tool is a component of the rgenetics toolkit.

Written by and copyright Ross Lazarus, ross.lazarus at gmail etc, September 2010
Code cleaned up and the ugliest hacks repaired by Raphael Lullis

All rgenetics artifacts are available licensed under the LGPL
Other dependencies are licensed at the author's discretion - please see each individual package for details

  </help>
</tool>
